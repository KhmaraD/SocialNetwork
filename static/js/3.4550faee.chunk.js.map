{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogsItems","src","img","alt","to","activeClassName","active","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","style","messageFormBtn","Dialogs","state","dialogsPage","dialogsElement","dialogs","map","d","messagesElements","messages","m","isAuth","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","mapStateToProps","mapDispatchToProps","dispatch","sendMessageCreator","compose","AuthRedirectComponent","DialogsContainer"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,KAAO,sBAAsB,eAAiB,gCAAgC,aAAe,gC,oBCAvLD,EAAOC,QAAU,CAAC,aAAe,iCAAiC,OAAS,6B,oBCA3ED,EAAOC,QAAU,CAAC,QAAU,2B,wHCebC,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,sBAAKC,UAAWC,IAAEC,aAAlB,UACI,qBAAKC,IAAKN,EAAMO,IAAMC,IAAI,QAC1B,cAAC,IAAD,CAASC,GAAIR,EAAMS,gBAAiBN,IAAEO,OAAtC,SAA+CX,EAAMY,W,kBCFlDC,EANC,SAACb,GACb,OACI,qBAAKG,UAAWC,IAAEU,QAAlB,SAA4Bd,EAAMc,W,yCCCpCC,EAAcC,YAAiB,IAmBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAjBQ,SAACjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAK,iBACLc,YAAY,qBACZvB,UAAWwB,IAAMT,SAE5B,8BACI,wBAAQf,UAAWwB,IAAMC,eAAzB,kCCcDC,EA1BC,SAAC7B,GAEb,IAAI8B,EAAQ9B,EAAM+B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMV,GAAIiC,EAAEjC,GAAIK,IAAK4B,EAAE5B,KAAU4B,EAAEjC,OAChGkC,EAAmBN,EAAMO,SAASH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASxB,QAASwB,EAAExB,SAAcwB,EAAEpC,OAMpF,OAAKF,EAAMuC,OAGP,sBAAKpC,UAAWC,IAAE6B,QAAlB,UACI,qBAAK9B,UAAWC,IAAEC,aAAlB,SACM2B,IAEN,sBAAK7B,UAAWC,IAAEiC,SAAlB,UACI,8BAAOD,IACP,cAAC,EAAD,CAAgBjB,SAbR,SAACqB,GACjBxC,EAAMyC,YAAYD,EAAOE,yBAGH,cAAC,IAAD,CAAUjC,GAAI,Y,mDCdxCkC,EAA6B,SAACb,GAAD,MAAY,CACzCS,OAAQT,EAAMc,KAAKL,SAGVM,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKhD,MAAMuC,OAET,cAACO,EAAD,eAAeE,KAAKhD,QAFI,cAAC,IAAD,CAAUS,GAAG,eAJT,GAEXwC,IAAMH,WAUtC,OAFqCI,YAAQP,EAARO,CAAoCH,I,QCXzEI,EAAkB,SAACrB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAIvBqB,EAAqB,SAACC,GACtB,MAAO,CACHZ,YAAa,SAACC,GACVW,EAASC,YAAmBZ,OAKxCa,YACIL,YAAQC,EAAiBC,GAAqBP,EADlDU,CACoE1B,GAEpE,IAAI2B,EAAwBX,EAAiBhB,GAEvC4B,EAAmBP,YAAQC,EAAiBC,EAAzBF,CAA6CM,GAEvDC","file":"static/js/3.4550faee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Zrpj\",\"messages\":\"Dialogs_messages__1a9NG\",\"form\":\"Dialogs_form__3D6oP\",\"messageFormBtn\":\"Dialogs_messageFormBtn__2W4wG\",\"dialogsItems\":\"Dialogs_dialogsItems__2sGTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItem_dialogsItems__CZpLC\",\"active\":\"DialogItem_active__1PRJ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__9QES-\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialogsItems}>\r\n            <img src={props.img}  alt=\"img\"/>\r\n            <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport style from \"../Dialogs.module.css\"\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\"\r\n                       className={style.form} />\r\n            </div>\r\n            <div>\r\n                <button className={style.messageFormBtn}>Send message</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElement = state.dialogs.map( d => <DialogItem name={d.name} id={d.id} img={d.img} key={d.id} />)\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} />)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElement }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\ncompose(\r\n    connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}