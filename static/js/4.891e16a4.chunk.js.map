{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.jsx","assets/images/avatar_post.jpg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","title","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","styleForm","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","profileDataWrapper","nameWrapper","editProfileInfoBtn","onClick","fullName","aboutMeWrapper","aboutMe","lookingForAJob","skills","lookingForAJobDescription","contactsWrapper","contactTitle","contactValue","Contact","href","ProfileInfo","savePhoto","saveProfile","Preloader","description","photoWrapper","src","photos","large","userPhoto","alt","mainPhoto","target","files","length","initialValues","formData","then","Post","item","postAvatar","message","likesCount","MyPosts","React","memo","postsElement","posts","reverse","p","id","myPosts","MyPostsFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","compose","authorizedUserId","auth","userId","isAuth","getUserProfile","getStatus","withRouter","match","params","history","push","updateSattus"],"mappings":"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","file":"static/js/4.891e16a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverImg\":\"ProfileInfo_coverImg__1F-C9\",\"description\":\"ProfileInfo_description__3JEVu\",\"profileDataWrapper\":\"ProfileInfo_profileDataWrapper__3Dev7\",\"nameWrapper\":\"ProfileInfo_nameWrapper__3o0aY\",\"editProfileInfoBtn\":\"ProfileInfo_editProfileInfoBtn__78Q0Z\",\"aboutMeWrapper\":\"ProfileInfo_aboutMeWrapper__1C9LT\",\"aboutMe\":\"ProfileInfo_aboutMe__1JhGm\",\"contactsWrapper\":\"ProfileInfo_contactsWrapper__3Hc8S\",\"contact\":\"ProfileInfo_contact__14Lst\",\"photoWrapper\":\"ProfileInfo_photoWrapper__3ytfY\",\"mainPhoto\":\"ProfileInfo_mainPhoto__p2IA8\",\"fullName\":\"ProfileInfo_fullName__lpc8z\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__2QQ_M\",\"skills\":\"ProfileInfo_skills__1_K6w\",\"status\":\"ProfileInfo_status__2COJg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3Uaj6\",\"posts\":\"MyPosts_posts__UXiQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__350vV\"};","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            { !editMode &&\r\n            <div>\r\n                <span title=\"Double click to edit\" onDoubleClick={activateEditMode}> {props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport styleForm from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>Save</button></div>\r\n            { error && <div className={styleForm.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"}) }\r\n            </div>\r\n            <div>\r\n                <b>My profession skills</b>:\r\n                {createField(\"My profession skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>:\r\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                    return (\r\n                        <div key={key} className={s.contact}>\r\n                            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({isOwner, profile, savePhoto, status, updateStatus, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.description}>\r\n                <div className={s.photoWrapper}>\r\n                    <img src={profile.photos.large || userPhoto } alt=\"photo\" className={s.mainPhoto} />\r\n                    { isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n\r\n                { editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={ () => {setEditMode(true)} } \r\n                                   profile={profile} \r\n                                   isOwner={isOwner} \r\n                                   status={status} \r\n                                   updateStatus={updateStatus}/> }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({isOwner, profile, goToEditMode, updateStatus, status}) => {\r\n    return (\r\n        <div className={s.profileDataWrapper}>\r\n            <div className={s.nameWrapper}>\r\n                {isOwner && <div className={s.editProfileInfoBtn}>\r\n                    <button onClick={goToEditMode}>Edit</button>\r\n                </div>}\r\n                <div className={s.fullName}>\r\n                    <h1>{profile.fullName}</h1>\r\n                </div>\r\n            </div>\r\n            <div className={s.aboutMeWrapper}>\r\n                <div className={s.aboutMe}>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n                    <div className={s.lookingForAJob}>\r\n                        {profile.lookingForAJob ? \"I am looking for a job\" : \"I have a job\"}\r\n                    </div>\r\n\r\n                    {profile.lookingForAJob &&\r\n                    <div className={s.skills}>\r\n                        <b>My professional skills</b>: <br/>{profile.lookingForAJobDescription}\r\n                    </div>\r\n                    }\r\n\r\n                    <div>\r\n                        <b>About me</b>: {profile.aboutMe}\r\n                    </div>\r\n                </div>\r\n                <div className={s.contactsWrapper}>\r\n                    <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return contactValue &&\r\n                <div className={s.contact}><b>{contactTitle}</b>: <a href={contactValue}>{contactValue}</a></div>\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/avatar_post.2ecea512.jpg\";","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport postAvatar from '../../../../assets/images/avatar_post.jpg'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={postAvatar} alt=\"avatar_img\"/>\r\n      { props.message }\r\n      <div>\r\n        <span>Like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElement =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map( p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/> )\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h3>My posts</h3>\r\n            <MyPostsFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                { postsElement }\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"newPostText\"\r\n                       placeholder=\"enter text\"\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({form: \"ProfileAddNewPostsForm\"})(AddNewPostsForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        let userId = props.match.params.userId;\r\n        if (!userId) {\r\n            userId = props.authorizedUserId;\r\n            if (!userId) {\r\n                props.history.push(\"/login\");\r\n            }\r\n        }\r\n        props.getUserProfile(userId);\r\n        props.getStatus(userId);\r\n    }, [props.match.params.userId]);\r\n\r\n    return (\r\n        <Profile {...props}\r\n                 isOwner={!props.match.params.userId}\r\n                 profile={props.profile}\r\n                 status={props.status}\r\n                 updateSattus={props.updateStatus}\r\n                 savePhoto={props.savePhoto}/>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}